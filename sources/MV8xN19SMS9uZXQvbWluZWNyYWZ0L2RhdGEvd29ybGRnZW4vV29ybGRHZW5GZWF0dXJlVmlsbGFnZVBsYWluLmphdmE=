package net.minecraft.data.worldgen;

import com.google.common.collect.ImmutableList;
import com.mojang.datafixers.util.Pair;
import net.minecraft.resources.MinecraftKey;
import net.minecraft.world.level.levelgen.feature.structures.WorldGenFeatureDefinedStructurePoolStructure;
import net.minecraft.world.level.levelgen.feature.structures.WorldGenFeatureDefinedStructurePoolTemplate;

public class WorldGenFeatureVillagePlain {

    public static final WorldGenFeatureDefinedStructurePoolTemplate START = WorldGenFeaturePieces.a(new WorldGenFeatureDefinedStructurePoolTemplate(new MinecraftKey("village/plains/town_centers"), new MinecraftKey("empty"), ImmutableList.of(Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/town_centers/plains_fountain_01", ProcessorLists.MOSSIFY_20_PERCENT), 50), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/town_centers/plains_meeting_point_1", ProcessorLists.MOSSIFY_20_PERCENT), 50), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/town_centers/plains_meeting_point_2"), 50), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/town_centers/plains_meeting_point_3", ProcessorLists.MOSSIFY_70_PERCENT), 50), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/zombie/town_centers/plains_fountain_01", ProcessorLists.ZOMBIE_PLAINS), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/zombie/town_centers/plains_meeting_point_1", ProcessorLists.ZOMBIE_PLAINS), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/zombie/town_centers/plains_meeting_point_2", ProcessorLists.ZOMBIE_PLAINS), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/zombie/town_centers/plains_meeting_point_3", ProcessorLists.ZOMBIE_PLAINS), 1)), WorldGenFeatureDefinedStructurePoolTemplate.Matching.RIGID));

    public WorldGenFeatureVillagePlain() {}

    public static void a() {}

    static {
        WorldGenFeaturePieces.a(new WorldGenFeatureDefinedStructurePoolTemplate(new MinecraftKey("village/plains/streets"), new MinecraftKey("village/plains/terminators"), ImmutableList.of(Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/streets/corner_01", ProcessorLists.STREET_PLAINS), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/streets/corner_02", ProcessorLists.STREET_PLAINS), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/streets/corner_03", ProcessorLists.STREET_PLAINS), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/streets/straight_01", ProcessorLists.STREET_PLAINS), 4), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/streets/straight_02", ProcessorLists.STREET_PLAINS), 4), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/streets/straight_03", ProcessorLists.STREET_PLAINS), 7), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/streets/straight_04", ProcessorLists.STREET_PLAINS), 7), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/streets/straight_05", ProcessorLists.STREET_PLAINS), 3), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/streets/straight_06", ProcessorLists.STREET_PLAINS), 4), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/streets/crossroad_01", ProcessorLists.STREET_PLAINS), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/streets/crossroad_02", ProcessorLists.STREET_PLAINS), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/streets/crossroad_03", ProcessorLists.STREET_PLAINS), 2), new Pair[]{Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/streets/crossroad_04", ProcessorLists.STREET_PLAINS), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/streets/crossroad_05", ProcessorLists.STREET_PLAINS), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/streets/crossroad_06", ProcessorLists.STREET_PLAINS), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/streets/turn_01", ProcessorLists.STREET_PLAINS), 3)}), WorldGenFeatureDefinedStructurePoolTemplate.Matching.TERRAIN_MATCHING));
        WorldGenFeaturePieces.a(new WorldGenFeatureDefinedStructurePoolTemplate(new MinecraftKey("village/plains/zombie/streets"), new MinecraftKey("village/plains/terminators"), ImmutableList.of(Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/zombie/streets/corner_01", ProcessorLists.STREET_PLAINS), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/zombie/streets/corner_02", ProcessorLists.STREET_PLAINS), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/zombie/streets/corner_03", ProcessorLists.STREET_PLAINS), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/zombie/streets/straight_01", ProcessorLists.STREET_PLAINS), 4), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/zombie/streets/straight_02", ProcessorLists.STREET_PLAINS), 4), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/zombie/streets/straight_03", ProcessorLists.STREET_PLAINS), 7), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/zombie/streets/straight_04", ProcessorLists.STREET_PLAINS), 7), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/zombie/streets/straight_05", ProcessorLists.STREET_PLAINS), 3), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/zombie/streets/straight_06", ProcessorLists.STREET_PLAINS), 4), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/zombie/streets/crossroad_01", ProcessorLists.STREET_PLAINS), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/zombie/streets/crossroad_02", ProcessorLists.STREET_PLAINS), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/zombie/streets/crossroad_03", ProcessorLists.STREET_PLAINS), 2), new Pair[]{Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/zombie/streets/crossroad_04", ProcessorLists.STREET_PLAINS), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/zombie/streets/crossroad_05", ProcessorLists.STREET_PLAINS), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/zombie/streets/crossroad_06", ProcessorLists.STREET_PLAINS), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/zombie/streets/turn_01", ProcessorLists.STREET_PLAINS), 3)}), WorldGenFeatureDefinedStructurePoolTemplate.Matching.TERRAIN_MATCHING));
        WorldGenFeaturePieces.a(new WorldGenFeatureDefinedStructurePoolTemplate(new MinecraftKey("village/plains/houses"), new MinecraftKey("village/plains/terminators"), ImmutableList.of(Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_small_house_1", ProcessorLists.MOSSIFY_10_PERCENT), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_small_house_2", ProcessorLists.MOSSIFY_10_PERCENT), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_small_house_3", ProcessorLists.MOSSIFY_10_PERCENT), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_small_house_4", ProcessorLists.MOSSIFY_10_PERCENT), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_small_house_5", ProcessorLists.MOSSIFY_10_PERCENT), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_small_house_6", ProcessorLists.MOSSIFY_10_PERCENT), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_small_house_7", ProcessorLists.MOSSIFY_10_PERCENT), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_small_house_8", ProcessorLists.MOSSIFY_10_PERCENT), 3), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_medium_house_1", ProcessorLists.MOSSIFY_10_PERCENT), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_medium_house_2", ProcessorLists.MOSSIFY_10_PERCENT), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_big_house_1", ProcessorLists.MOSSIFY_10_PERCENT), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_butcher_shop_1", ProcessorLists.MOSSIFY_10_PERCENT), 2), new Pair[]{Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_butcher_shop_2", ProcessorLists.MOSSIFY_10_PERCENT), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_tool_smith_1", ProcessorLists.MOSSIFY_10_PERCENT), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_fletcher_house_1", ProcessorLists.MOSSIFY_10_PERCENT), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_shepherds_house_1"), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_armorer_house_1", ProcessorLists.MOSSIFY_10_PERCENT), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_fisher_cottage_1", ProcessorLists.MOSSIFY_10_PERCENT), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_tannery_1", ProcessorLists.MOSSIFY_10_PERCENT), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_cartographer_1", ProcessorLists.MOSSIFY_10_PERCENT), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_library_1", ProcessorLists.MOSSIFY_10_PERCENT), 5), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_library_2", ProcessorLists.MOSSIFY_10_PERCENT), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_masons_house_1", ProcessorLists.MOSSIFY_10_PERCENT), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_weaponsmith_1", ProcessorLists.MOSSIFY_10_PERCENT), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_temple_3", ProcessorLists.MOSSIFY_10_PERCENT), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_temple_4", ProcessorLists.MOSSIFY_10_PERCENT), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_stable_1", ProcessorLists.MOSSIFY_10_PERCENT), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_stable_2"), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_large_farm_1", ProcessorLists.FARM_PLAINS), 4), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_small_farm_1", ProcessorLists.FARM_PLAINS), 4), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_animal_pen_1"), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_animal_pen_2"), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_animal_pen_3"), 5), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_accessory_1"), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_meeting_point_4", ProcessorLists.MOSSIFY_70_PERCENT), 3), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_meeting_point_5"), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.g(), 10)}), WorldGenFeatureDefinedStructurePoolTemplate.Matching.RIGID));
        WorldGenFeaturePieces.a(new WorldGenFeatureDefinedStructurePoolTemplate(new MinecraftKey("village/plains/zombie/houses"), new MinecraftKey("village/plains/terminators"), ImmutableList.of(Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/zombie/houses/plains_small_house_1", ProcessorLists.ZOMBIE_PLAINS), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/zombie/houses/plains_small_house_2", ProcessorLists.ZOMBIE_PLAINS), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/zombie/houses/plains_small_house_3", ProcessorLists.ZOMBIE_PLAINS), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/zombie/houses/plains_small_house_4", ProcessorLists.ZOMBIE_PLAINS), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/zombie/houses/plains_small_house_5", ProcessorLists.ZOMBIE_PLAINS), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/zombie/houses/plains_small_house_6", ProcessorLists.ZOMBIE_PLAINS), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/zombie/houses/plains_small_house_7", ProcessorLists.ZOMBIE_PLAINS), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/zombie/houses/plains_small_house_8", ProcessorLists.ZOMBIE_PLAINS), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/zombie/houses/plains_medium_house_1", ProcessorLists.ZOMBIE_PLAINS), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/zombie/houses/plains_medium_house_2", ProcessorLists.ZOMBIE_PLAINS), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/zombie/houses/plains_big_house_1", ProcessorLists.ZOMBIE_PLAINS), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_butcher_shop_1", ProcessorLists.ZOMBIE_PLAINS), 2), new Pair[]{Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/zombie/houses/plains_butcher_shop_2", ProcessorLists.ZOMBIE_PLAINS), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_tool_smith_1", ProcessorLists.ZOMBIE_PLAINS), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/zombie/houses/plains_fletcher_house_1", ProcessorLists.ZOMBIE_PLAINS), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/zombie/houses/plains_shepherds_house_1", ProcessorLists.ZOMBIE_PLAINS), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_armorer_house_1", ProcessorLists.ZOMBIE_PLAINS), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_fisher_cottage_1", ProcessorLists.ZOMBIE_PLAINS), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_tannery_1", ProcessorLists.ZOMBIE_PLAINS), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_cartographer_1", ProcessorLists.ZOMBIE_PLAINS), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_library_1", ProcessorLists.ZOMBIE_PLAINS), 3), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_library_2", ProcessorLists.ZOMBIE_PLAINS), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_masons_house_1", ProcessorLists.ZOMBIE_PLAINS), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_weaponsmith_1", ProcessorLists.ZOMBIE_PLAINS), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_temple_3", ProcessorLists.ZOMBIE_PLAINS), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_temple_4", ProcessorLists.ZOMBIE_PLAINS), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/zombie/houses/plains_stable_1", ProcessorLists.ZOMBIE_PLAINS), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_stable_2", ProcessorLists.ZOMBIE_PLAINS), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_large_farm_1", ProcessorLists.ZOMBIE_PLAINS), 4), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_small_farm_1", ProcessorLists.ZOMBIE_PLAINS), 4), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_animal_pen_1", ProcessorLists.ZOMBIE_PLAINS), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/houses/plains_animal_pen_2", ProcessorLists.ZOMBIE_PLAINS), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/zombie/houses/plains_animal_pen_3", ProcessorLists.ZOMBIE_PLAINS), 5), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/zombie/houses/plains_meeting_point_4", ProcessorLists.ZOMBIE_PLAINS), 3), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/zombie/houses/plains_meeting_point_5", ProcessorLists.ZOMBIE_PLAINS), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.g(), 10)}), WorldGenFeatureDefinedStructurePoolTemplate.Matching.RIGID));
        WorldGenFeaturePieces.a(new WorldGenFeatureDefinedStructurePoolTemplate(new MinecraftKey("village/plains/terminators"), new MinecraftKey("empty"), ImmutableList.of(Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/terminators/terminator_01", ProcessorLists.STREET_PLAINS), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/terminators/terminator_02", ProcessorLists.STREET_PLAINS), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/terminators/terminator_03", ProcessorLists.STREET_PLAINS), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/terminators/terminator_04", ProcessorLists.STREET_PLAINS), 1)), WorldGenFeatureDefinedStructurePoolTemplate.Matching.TERRAIN_MATCHING));
        WorldGenFeaturePieces.a(new WorldGenFeatureDefinedStructurePoolTemplate(new MinecraftKey("village/plains/trees"), new MinecraftKey("empty"), ImmutableList.of(Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a(BiomeDecoratorGroups.OAK), 1)), WorldGenFeatureDefinedStructurePoolTemplate.Matching.RIGID));
        WorldGenFeaturePieces.a(new WorldGenFeatureDefinedStructurePoolTemplate(new MinecraftKey("village/plains/decor"), new MinecraftKey("empty"), ImmutableList.of(Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/plains_lamp_1"), 2), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a(BiomeDecoratorGroups.OAK), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a(BiomeDecoratorGroups.FLOWER_PLAIN), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a(BiomeDecoratorGroups.PILE_HAY), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.g(), 2)), WorldGenFeatureDefinedStructurePoolTemplate.Matching.RIGID));
        WorldGenFeaturePieces.a(new WorldGenFeatureDefinedStructurePoolTemplate(new MinecraftKey("village/plains/zombie/decor"), new MinecraftKey("empty"), ImmutableList.of(Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/plains_lamp_1", ProcessorLists.ZOMBIE_PLAINS), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a(BiomeDecoratorGroups.OAK), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a(BiomeDecoratorGroups.FLOWER_PLAIN), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a(BiomeDecoratorGroups.PILE_HAY), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.g(), 2)), WorldGenFeatureDefinedStructurePoolTemplate.Matching.RIGID));
        WorldGenFeaturePieces.a(new WorldGenFeatureDefinedStructurePoolTemplate(new MinecraftKey("village/plains/villagers"), new MinecraftKey("empty"), ImmutableList.of(Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/villagers/nitwit"), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/villagers/baby"), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/villagers/unemployed"), 10)), WorldGenFeatureDefinedStructurePoolTemplate.Matching.RIGID));
        WorldGenFeaturePieces.a(new WorldGenFeatureDefinedStructurePoolTemplate(new MinecraftKey("village/plains/zombie/villagers"), new MinecraftKey("empty"), ImmutableList.of(Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/zombie/villagers/nitwit"), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/plains/zombie/villagers/unemployed"), 10)), WorldGenFeatureDefinedStructurePoolTemplate.Matching.RIGID));
        WorldGenFeaturePieces.a(new WorldGenFeatureDefinedStructurePoolTemplate(new MinecraftKey("village/common/animals"), new MinecraftKey("empty"), ImmutableList.of(Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/common/animals/cows_1"), 7), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/common/animals/pigs_1"), 7), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/common/animals/horses_1"), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/common/animals/horses_2"), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/common/animals/horses_3"), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/common/animals/horses_4"), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/common/animals/horses_5"), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/common/animals/sheep_1"), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/common/animals/sheep_2"), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.g(), 5)), WorldGenFeatureDefinedStructurePoolTemplate.Matching.RIGID));
        WorldGenFeaturePieces.a(new WorldGenFeatureDefinedStructurePoolTemplate(new MinecraftKey("village/common/sheep"), new MinecraftKey("empty"), ImmutableList.of(Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/common/animals/sheep_1"), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/common/animals/sheep_2"), 1)), WorldGenFeatureDefinedStructurePoolTemplate.Matching.RIGID));
        WorldGenFeaturePieces.a(new WorldGenFeatureDefinedStructurePoolTemplate(new MinecraftKey("village/common/cats"), new MinecraftKey("empty"), ImmutableList.of(Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/common/animals/cat_black"), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/common/animals/cat_british"), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/common/animals/cat_calico"), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/common/animals/cat_persian"), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/common/animals/cat_ragdoll"), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/common/animals/cat_red"), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/common/animals/cat_siamese"), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/common/animals/cat_tabby"), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/common/animals/cat_white"), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/common/animals/cat_jellie"), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.g(), 3)), WorldGenFeatureDefinedStructurePoolTemplate.Matching.RIGID));
        WorldGenFeaturePieces.a(new WorldGenFeatureDefinedStructurePoolTemplate(new MinecraftKey("village/common/butcher_animals"), new MinecraftKey("empty"), ImmutableList.of(Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/common/animals/cows_1"), 3), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/common/animals/pigs_1"), 3), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/common/animals/sheep_1"), 1), Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/common/animals/sheep_2"), 1)), WorldGenFeatureDefinedStructurePoolTemplate.Matching.RIGID));
        WorldGenFeaturePieces.a(new WorldGenFeatureDefinedStructurePoolTemplate(new MinecraftKey("village/common/iron_golem"), new MinecraftKey("empty"), ImmutableList.of(Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/common/iron_golem"), 1)), WorldGenFeatureDefinedStructurePoolTemplate.Matching.RIGID));
        WorldGenFeaturePieces.a(new WorldGenFeatureDefinedStructurePoolTemplate(new MinecraftKey("village/common/well_bottoms"), new MinecraftKey("empty"), ImmutableList.of(Pair.of(WorldGenFeatureDefinedStructurePoolStructure.a("village/common/well_bottom"), 1)), WorldGenFeatureDefinedStructurePoolTemplate.Matching.RIGID));
    }
}
