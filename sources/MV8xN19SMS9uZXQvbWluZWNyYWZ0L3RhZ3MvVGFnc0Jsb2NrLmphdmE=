package net.minecraft.tags;

import net.minecraft.core.IRegistry;
import net.minecraft.world.level.block.Block;

public final class TagsBlock {

    protected static final TagUtil<Block> HELPER = TagStatic.a(IRegistry.BLOCK_REGISTRY, "tags/blocks");
    public static final Tag.e<Block> WOOL = a("wool");
    public static final Tag.e<Block> PLANKS = a("planks");
    public static final Tag.e<Block> STONE_BRICKS = a("stone_bricks");
    public static final Tag.e<Block> WOODEN_BUTTONS = a("wooden_buttons");
    public static final Tag.e<Block> BUTTONS = a("buttons");
    public static final Tag.e<Block> CARPETS = a("carpets");
    public static final Tag.e<Block> WOODEN_DOORS = a("wooden_doors");
    public static final Tag.e<Block> WOODEN_STAIRS = a("wooden_stairs");
    public static final Tag.e<Block> WOODEN_SLABS = a("wooden_slabs");
    public static final Tag.e<Block> WOODEN_FENCES = a("wooden_fences");
    public static final Tag.e<Block> PRESSURE_PLATES = a("pressure_plates");
    public static final Tag.e<Block> WOODEN_PRESSURE_PLATES = a("wooden_pressure_plates");
    public static final Tag.e<Block> STONE_PRESSURE_PLATES = a("stone_pressure_plates");
    public static final Tag.e<Block> WOODEN_TRAPDOORS = a("wooden_trapdoors");
    public static final Tag.e<Block> DOORS = a("doors");
    public static final Tag.e<Block> SAPLINGS = a("saplings");
    public static final Tag.e<Block> LOGS_THAT_BURN = a("logs_that_burn");
    public static final Tag.e<Block> LOGS = a("logs");
    public static final Tag.e<Block> DARK_OAK_LOGS = a("dark_oak_logs");
    public static final Tag.e<Block> OAK_LOGS = a("oak_logs");
    public static final Tag.e<Block> BIRCH_LOGS = a("birch_logs");
    public static final Tag.e<Block> ACACIA_LOGS = a("acacia_logs");
    public static final Tag.e<Block> JUNGLE_LOGS = a("jungle_logs");
    public static final Tag.e<Block> SPRUCE_LOGS = a("spruce_logs");
    public static final Tag.e<Block> CRIMSON_STEMS = a("crimson_stems");
    public static final Tag.e<Block> WARPED_STEMS = a("warped_stems");
    public static final Tag.e<Block> BANNERS = a("banners");
    public static final Tag.e<Block> SAND = a("sand");
    public static final Tag.e<Block> STAIRS = a("stairs");
    public static final Tag.e<Block> SLABS = a("slabs");
    public static final Tag.e<Block> WALLS = a("walls");
    public static final Tag.e<Block> ANVIL = a("anvil");
    public static final Tag.e<Block> RAILS = a("rails");
    public static final Tag.e<Block> LEAVES = a("leaves");
    public static final Tag.e<Block> TRAPDOORS = a("trapdoors");
    public static final Tag.e<Block> SMALL_FLOWERS = a("small_flowers");
    public static final Tag.e<Block> BEDS = a("beds");
    public static final Tag.e<Block> FENCES = a("fences");
    public static final Tag.e<Block> TALL_FLOWERS = a("tall_flowers");
    public static final Tag.e<Block> FLOWERS = a("flowers");
    public static final Tag.e<Block> PIGLIN_REPELLENTS = a("piglin_repellents");
    public static final Tag.e<Block> GOLD_ORES = a("gold_ores");
    public static final Tag.e<Block> IRON_ORES = a("iron_ores");
    public static final Tag.e<Block> DIAMOND_ORES = a("diamond_ores");
    public static final Tag.e<Block> REDSTONE_ORES = a("redstone_ores");
    public static final Tag.e<Block> LAPIS_ORES = a("lapis_ores");
    public static final Tag.e<Block> COAL_ORES = a("coal_ores");
    public static final Tag.e<Block> EMERALD_ORES = a("emerald_ores");
    public static final Tag.e<Block> COPPER_ORES = a("copper_ores");
    public static final Tag.e<Block> NON_FLAMMABLE_WOOD = a("non_flammable_wood");
    public static final Tag.e<Block> CANDLES = a("candles");
    public static final Tag.e<Block> DIRT = a("dirt");
    public static final Tag.e<Block> FLOWER_POTS = a("flower_pots");
    public static final Tag.e<Block> ENDERMAN_HOLDABLE = a("enderman_holdable");
    public static final Tag.e<Block> ICE = a("ice");
    public static final Tag.e<Block> VALID_SPAWN = a("valid_spawn");
    public static final Tag.e<Block> IMPERMEABLE = a("impermeable");
    public static final Tag.e<Block> UNDERWATER_BONEMEALS = a("underwater_bonemeals");
    public static final Tag.e<Block> CORAL_BLOCKS = a("coral_blocks");
    public static final Tag.e<Block> WALL_CORALS = a("wall_corals");
    public static final Tag.e<Block> CORAL_PLANTS = a("coral_plants");
    public static final Tag.e<Block> CORALS = a("corals");
    public static final Tag.e<Block> BAMBOO_PLANTABLE_ON = a("bamboo_plantable_on");
    public static final Tag.e<Block> STANDING_SIGNS = a("standing_signs");
    public static final Tag.e<Block> WALL_SIGNS = a("wall_signs");
    public static final Tag.e<Block> SIGNS = a("signs");
    public static final Tag.e<Block> DRAGON_IMMUNE = a("dragon_immune");
    public static final Tag.e<Block> WITHER_IMMUNE = a("wither_immune");
    public static final Tag.e<Block> WITHER_SUMMON_BASE_BLOCKS = a("wither_summon_base_blocks");
    public static final Tag.e<Block> BEEHIVES = a("beehives");
    public static final Tag.e<Block> CROPS = a("crops");
    public static final Tag.e<Block> BEE_GROWABLES = a("bee_growables");
    public static final Tag.e<Block> PORTALS = a("portals");
    public static final Tag.e<Block> FIRE = a("fire");
    public static final Tag.e<Block> NYLIUM = a("nylium");
    public static final Tag.e<Block> WART_BLOCKS = a("wart_blocks");
    public static final Tag.e<Block> BEACON_BASE_BLOCKS = a("beacon_base_blocks");
    public static final Tag.e<Block> SOUL_SPEED_BLOCKS = a("soul_speed_blocks");
    public static final Tag.e<Block> WALL_POST_OVERRIDE = a("wall_post_override");
    public static final Tag.e<Block> CLIMBABLE = a("climbable");
    public static final Tag.e<Block> SHULKER_BOXES = a("shulker_boxes");
    public static final Tag.e<Block> HOGLIN_REPELLENTS = a("hoglin_repellents");
    public static final Tag.e<Block> SOUL_FIRE_BASE_BLOCKS = a("soul_fire_base_blocks");
    public static final Tag.e<Block> STRIDER_WARM_BLOCKS = a("strider_warm_blocks");
    public static final Tag.e<Block> CAMPFIRES = a("campfires");
    public static final Tag.e<Block> GUARDED_BY_PIGLINS = a("guarded_by_piglins");
    public static final Tag.e<Block> PREVENT_MOB_SPAWNING_INSIDE = a("prevent_mob_spawning_inside");
    public static final Tag.e<Block> FENCE_GATES = a("fence_gates");
    public static final Tag.e<Block> UNSTABLE_BOTTOM_CENTER = a("unstable_bottom_center");
    public static final Tag.e<Block> MUSHROOM_GROW_BLOCK = a("mushroom_grow_block");
    public static final Tag.e<Block> INFINIBURN_OVERWORLD = a("infiniburn_overworld");
    public static final Tag.e<Block> INFINIBURN_NETHER = a("infiniburn_nether");
    public static final Tag.e<Block> INFINIBURN_END = a("infiniburn_end");
    public static final Tag.e<Block> BASE_STONE_OVERWORLD = a("base_stone_overworld");
    public static final Tag.e<Block> STONE_ORE_REPLACEABLES = a("stone_ore_replaceables");
    public static final Tag.e<Block> DEEPSLATE_ORE_REPLACEABLES = a("deepslate_ore_replaceables");
    public static final Tag.e<Block> BASE_STONE_NETHER = a("base_stone_nether");
    public static final Tag.e<Block> CANDLE_CAKES = a("candle_cakes");
    public static final Tag.e<Block> CAULDRONS = a("cauldrons");
    public static final Tag.e<Block> CRYSTAL_SOUND_BLOCKS = a("crystal_sound_blocks");
    public static final Tag.e<Block> INSIDE_STEP_SOUND_BLOCKS = a("inside_step_sound_blocks");
    public static final Tag.e<Block> OCCLUDES_VIBRATION_SIGNALS = a("occludes_vibration_signals");
    public static final Tag.e<Block> DRIPSTONE_REPLACEABLE = a("dripstone_replaceable_blocks");
    public static final Tag.e<Block> CAVE_VINES = a("cave_vines");
    public static final Tag.e<Block> MOSS_REPLACEABLE = a("moss_replaceable");
    public static final Tag.e<Block> LUSH_GROUND_REPLACEABLE = a("lush_ground_replaceable");
    public static final Tag.e<Block> SMALL_DRIPLEAF_PLACEABLE = a("small_dripleaf_placeable");
    public static final Tag.e<Block> SNOW = a("snow");
    public static final Tag.e<Block> MINEABLE_WITH_AXE = a("mineable/axe");
    public static final Tag.e<Block> MINEABLE_WITH_HOE = a("mineable/hoe");
    public static final Tag.e<Block> MINEABLE_WITH_PICKAXE = a("mineable/pickaxe");
    public static final Tag.e<Block> MINEABLE_WITH_SHOVEL = a("mineable/shovel");
    public static final Tag.e<Block> NEEDS_DIAMOND_TOOL = a("needs_diamond_tool");
    public static final Tag.e<Block> NEEDS_IRON_TOOL = a("needs_iron_tool");
    public static final Tag.e<Block> NEEDS_STONE_TOOL = a("needs_stone_tool");
    public static final Tag.e<Block> FEATURES_CANNOT_REPLACE = a("features_cannot_replace");
    public static final Tag.e<Block> LAVA_POOL_STONE_CANNOT_REPLACE = a("lava_pool_stone_replaceables");
    public static final Tag.e<Block> GEODE_INVALID_BLOCKS = a("geode_invalid_blocks");

    private TagsBlock() {}

    private static Tag.e<Block> a(String s) {
        return TagsBlock.HELPER.a(s);
    }

    public static Tags<Block> a() {
        return TagsBlock.HELPER.b();
    }
}
